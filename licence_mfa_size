# Überprüfen und ggf. Installation der Module
$modules = @("MSOnline", "ExchangeOnlineManagement", "AzureAD")
foreach ($module in $modules) {
    if (-not (Get-Module -Name $module -ListAvailable)) {
        Install-Module -Name $module -Force -AllowClobber
    }
}

# Importieren der Module
Import-Module MSOnline
Import-Module ExchangeOnlineManagement
Import-Module AzureAD

# Verbindung zu Office 365 herstellen
Connect-MsolService

# Verbindung zu Exchange Online herstellen
Connect-ExchangeOnline -UserPrincipalName admin@bruegger-keramik.ch

# Verbindung zu Azure AD herstellen
Connect-AzureAD

# Alle lizenzierten Benutzerkonten abrufen
$licensedUsers = Get-MsolUser -All | Where-Object { $_.IsLicensed -eq $true }

# Starten des HTML-Formats
$htmlContent = @"
<!DOCTYPE html>
<html>
<head>
<title>Lizenz- und Speichernutzungsbericht für Benutzer</title>
<style>
    table {
        width: 100%;
        border-collapse: collapse;
    }
    th, td {
        padding: 8px;
        text-align: left;
        border-bottom: 1px solid #ddd;
    }
    .enabled {
        color: green;
    }
    .disabled {
        color: red;
    }
</style>
</head>
<body>
<h1>Lizenz- und Speichernutzungsbericht für Benutzer</h1>

<h2>Lizenzinformationen</h2>
<table>
<tr>
    <th>Lizenztyp</th>
    <th>Verbrauchte Einheiten</th>
    <th>Vorausbezahlte Einheiten</th>
</tr>
"@

# Lizenzinformationen abrufen und in HTML-Tabelle einfügen
$licenses = Get-AzureADSubscribedSku
foreach ($license in $licenses) {
    $htmlContent += "<tr><td>$($license.SkuPartNumber)</td><td>$($license.ConsumedUnits)</td><td>$($license.PrepaidUnits.Enabled)</td></tr>"
}

$htmlContent += "</table>"

# Benutzerinformationen und Speichernutzung abrufen und in HTML-Tabelle einfügen
$htmlContent += @"
<h2>Benutzerinformationen, Speichernutzung und MFA-Status</h2>
<table>
<tr>
    <th>Benutzername</th>
    <th>Anzeigename</th>
    <th>Gesamter Speicherplatz</th>
    <th>Letzte Anmeldung</th>
    <th>MFA-Status</th>
</tr>
"@

$mailboxes = Get-Mailbox -ResultSize Unlimited
foreach ($mailbox in $mailboxes) {
    $stats = Get-MailboxStatistics -Identity $mailbox.UserPrincipalName
    $totalItemSizeMB = $stats.TotalItemSize.Value
    $lastLogonTime = (Get-MailboxStatistics -Identity $mailbox.UserPrincipalName).LastLogonTime

    $user = Get-MsolUser -UserPrincipalName $mailbox.UserPrincipalName
    if ($user.StrongAuthenticationMethods.Count -eq 0) {
        $mfaStatusText = "MFA nicht eingerichtet"
    } else {
        $mfaStatusText = "MFA eingerichtet"
    }

    $htmlContent += "<tr><td>$($mailbox.UserPrincipalName)</td><td>$($mailbox.DisplayName)</td><td>$totalItemSizeMB</td><td>$lastLogonTime</td><td>$mfaStatusText</td></tr>"
}

$htmlContent += "</table></body></html>"

# Ausgabe in eine HTML-Datei schreiben
$htmlFilePath = "Lizenz_Speichernutzung_MFA_Status.html"
$htmlContent | Out-File -FilePath $htmlFilePath -Encoding UTF8

# Meldung ausgeben, wo die HTML-Datei gespeichert wurde
Write-Host "Die Ausgabe wurde in die Datei '$htmlFilePath' geschrieben."
